using Application_Layer.UserAuth.Dtos;
using Application_Layer.IdeaSessions.DTOs;
using AutoMapper;
using Domain_Layer.Models;
using Application_Layer.Steps.Dtos;

namespace Application_Layer.Common.Mappings
{
    public class DataMappings : Profile
    {
        public DataMappings()
        {
            // User mapping
            CreateMap<UserModel, UserDataDto>().ReverseMap();
            CreateMap<Step, CreateStepRequestDto>().ReverseMap();
            CreateMap<Step, CreateStepResponseDto>().ReverseMap();
            CreateMap<Step, StepResponseDto>().ReverseMap();

            // IdeaSession with Steps mapping
            CreateMap<IdeaSession, IdeaSessionWithStepsDto>()
                .ForMember(dest => dest.IdeaId, opt => opt.MapFrom(src => src.Id))
                .ForMember(dest => dest.Steps, opt => opt.MapFrom(src => src.Steps.OrderBy(s => s.Order)));

            // Step mapping
            CreateMap<Step, StepDto>()
                .ForMember(dest => dest.StepId, opt => opt.MapFrom(src => src.Id))
                .ForMember(dest => dest.Order, opt => opt.MapFrom(src => src.Order));

            // Map from CreateIdeaSessionDto to IdeaSession entity
            CreateMap<CreateIdeaSessionDto, IdeaSession>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) // Id is generated by DB/handler
                .ForMember(dest => dest.CreatedAt, opt => opt.Ignore()) // CreatedAt is set by handler
                .ForMember(dest => dest.Steps, opt => opt.Ignore()) // Steps are not part of creation DTO
                .ForMember(dest => dest.MvpPlans, opt => opt.Ignore()) // MvpPlans are not part of creation DTO
                .ForMember(dest => dest.TechRecommendations, opt => opt.Ignore()); // TechRecommendations are not part of creation DTO

            // Map from IdeaSession entity to IdeaSessionDto (Output DTO)
            CreateMap<IdeaSession, IdeaSessionDto>()
                .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id)); // Map Id to Id
        }
    }
}
